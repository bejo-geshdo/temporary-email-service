openapi: "3.0.1"
info:
  title: "test"
  description: "My test API from TF"
  version: "2023-11-07T09:05:13Z"
servers:
  - url: "https://api.dev.inboxdev.castrojonsson.se/{basePath}"
    variables:
      basePath:
        default: "dev"
paths:
  /newAddress:
    post:
      description: "Creates a new email address with a 10 minute ttl"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: "juiefkjwq2wa89u2"
                  description: A long string of alphanumeric character
      responses:
        "200":
          description: "Successfully created a new address"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Successfully created a new address"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"
                  ttl:
                    type: integer
                    format: int64
                    example: "1699363102"
        "400":
          description: "Failed to create address"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "failed to create address"
                  error:
                    type: string
                    example: "Address alredy exists"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"

      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:833095292836:function:create_address/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

  /getMails:
    get:
      description: "Gets a list with meta data of all users emails"
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            example: "asdf@inboxnow@stepstone.com"
      responses:
        "200":
          description: "Success returning users emails"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Returning users emails"
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                          example: "dwafesrgdtgfh"
                        created_at:
                          type: integer
                          format: int64
                          example: 1699434230
                        teaser:
                          type: string
                          example: "Not implemented"
                        from_address:
                          type: string
                          example: "Benjamin.Jonsson@stepstone.com"
                        virusVerdict:
                          type: string
                          example: "DISABLED"
                        ttl:
                          type: integer
                          format: int64
                          example: 1699434830
                        spamVerdict:
                          type: string
                          example: "DISABLED"
                        email:
                          type: string
                          example: "ketnmzas@inboxnow.geshdo.dev"
                        messageId:
                          type: string
                          example: "evclsie2e3ebp9bo1u14iugbfieik2vcime0ocg1"
                        from:
                          type: string
                          example: "Benjamin Jonsson <Benjamin.Jonsson@stepstone.com>"
                        sk:
                          type: string
                          example: "mail#e89e4241-d90f-4482-b731-ecda92e73b58"
                        pk:
                          type: string
                          example: "ketnmzas@inboxnow.geshdo.dev"
                        to:
                          type: array
                          items:
                            type: string
                            example: "ketnmzas@inboxnow.geshdo.dev"
                        domain:
                          type: string
                          example: "inboxnow.geshdo.dev"
        "404":
          description: "Address not found"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed to return emails"
                  error:
                    type: string
                    example: "Address not found"
        "500":
          description: "Internal server error"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed to return emails"
                  error:
                    type: string
                    example: "error object"
        x-amazon-apigateway-integration:
          type: "aws_proxy"
          httpMethod: "POST"
          uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:833095292836:function:get_mails/invocations"
          passthroughBehavior: "when_no_match"
          timeoutInMillis: 29000

  /getSingedUrls:
    get:
      description: "Get's a signed URL to download the email file from S3"
      parameters:
        - name: messageId
          in: query
          required: true
          schema:
            type: string
            example: "evclsie2e3ebp9bo1u14iugbfieik2vcime0ocg1"
      responses:
        "200":
          description: "Success generating URL"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Success generating URL"
                  url:
                    type: string
                    example: "https.//s3.eu-west-1.amazonaws.com/bucket-name/asdf123?AWSAccessKeyId=asmkl29&x-amz-security=bmk20&Expires=1699434929"
        "404":
          description: "Email not found"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Error generating URL"
                  error:
                    type: string
                    example: "Email not found"
        "500":
          description: "Internal server error"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Error generating URL"
                  error:
                    type: string
                    example: "error object"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:833095292836:function:get_singed_url/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

  /extendTime:
    put:
      description: "Used to extend the time of an address and all emails by 10 minutes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: "juiefkjwq2wa89u2"
                  description: A long string of alphanumeric character

      parameters:
        - name: address
          in: query
          required: true
          schema:
            type: string
          example: "asdf@inboxnow.geshdo.dev"
      responses:
        "200":
          description: "Successful extension of time for address and emails."
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Successfully extend time for address and emails!"
                  address:
                    type: string
                    example: "emailAddress"
                  ttl:
                    type: integer
                    format: int64
                    example: "1699363102"
        "500":
          description: "Failed to extend time."
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed to extend time"
                  error:
                    type: string
                    example: "error object"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"
        "400":
          description: "Failed to extend time due to being too old to renew."
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed to extend time"
                  error:
                    type: string
                    example: "To old to renew"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"
                  ttl:
                    type: integer
                    format: int64
                    example: "1699363102"
        "404":
          description: "Not Found."
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:833095292836:function:extend_time/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

  /delete:
    delete:
      description: "Used to delete an Address and all emails or one email before expiration"
      parameters:
        - name: address
          in: query
          required: true
          schema:
            type: string
          example: "asdf@inboxnow.geshdo.dev"
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: ["address", "email"]
        - name: sk
          in: query
          required: false
          description: "Required when type is 'email'"
          schema:
            type: string
          example: "mail#5d66fb70-0bb0-4823-b59d-9a2530a8c2ee"

      responses:
        "200":
          description: "Successful delation of address or email"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Successfully deleted address or emails"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"
        "400":
          description: "Wrong or missing type"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed delete"
                  error:
                    type: string
                    example: "Wrong or missing type"
        "500":
          description: "Failed delete"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Failed delete"
                  error:
                    type: string
                    example: "Internal server error"
                  address:
                    type: string
                    example: "asdf@inboxnow.geshdo.dev"

      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:833095292836:function:delete/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

components:
  headers:
    Content-Type:
      schema:
        type: string
        example: "application/json"
    Access-Control-Allow-Origin:
      schema:
        type: string
        example: "*"
